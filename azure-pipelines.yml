pool:
  vmImage: 'Ubuntu 16.04'

variables:
  APP_NAME: "carts"
  ARTEFACT_ID: "sockshop/$(APP_NAME)"
  DOCKER_REGISTRY: "$(dockerRegistryEndpoint)"
  SUBSCRIPTION_ENDPOINT: "$(azureSubscriptionEndpoint)"  # variable for this not yet supported

steps:
- script: |
    versionFromFile=$(cat ./version)
    theTag=$(DOCKER_REGISTRY)/$(ARTEFACT_ID)
    theDevTag=$theTag-$versionFromFile-$(Build.BuildId)
    TheStageTag=$theTag-$versionFromFile
    echo "##vso[task.setvariable variable=VERSION]$versionFromFile"
    echo "##vso[task.setvariable variable=TAG]$theTag"
    echo "##vso[task.setvariable variable=TAG_DEV]$theDevTag"
    echo "##vso[task.setvariable variable=TAG_STAGING]$TheStageTag"
  displayName: 'Set build variables'

- script: |
    echo theTag = $theTag
    echo theDevTag = $theDevTag
    echo TheStageTag = $TheStageTag
    echo VERSION = $(VERSION)
    echo TAG = $(TAG)
    echo TAG_DEV = $(TAG_DEV)
    echo TAG_STAGING = $(TAG_STAGING)
  displayName: 'Echo build variables values'

- script: |
    sed -i 's#image: .*#image: $(TAG_DEV)#' manifest/$(APP_NAME).yml
    cat manifest/$(APP_NAME).yml
  displayName: 'Update Kubernetes YAML'

- task: Maven@3
  displayName: 'Maven Build'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'

- task: Docker@1
  displayName: 'Build an image'
  inputs:
    imageName: $(TAG_DEV)

- task: Docker@1
  displayName: Login
  inputs:
    azureSubscriptionEndpoint: $(SUBSCRIPTION_ENDPOINT)
    azureContainerRegistry: $(DOCKER_REGISTRY)
    command: login

- task: Docker@1
  displayName: 'Push an image'
  inputs:
    azureSubscriptionEndpoint: $(SUBSCRIPTION_ENDPOINT)
    azureContainerRegistry: $(DOCKER_REGISTRY)
    command: 'push'
    imageName: $(TAG_DEV)

- task: CopyFiles@2
  displayName: Create Archive with Kubernetes YAML
  inputs:
    contents: manifest/*
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  displayName: Publish Archive with Kubernetes YAML
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: Yaml